[{"C:\\Users\\kungu\\Desktop\\react\\myfirstreact\\src\\index.js":"1","C:\\Users\\kungu\\Desktop\\react\\myfirstreact\\src\\components\\counter.jsx":"2","C:\\Users\\kungu\\Desktop\\react\\myfirstreact\\src\\components\\navbar.jsx":"3","C:\\Users\\kungu\\Desktop\\react\\myfirstreact\\src\\App.js":"4","C:\\Users\\kungu\\Desktop\\react\\myfirstreact\\src\\InfoBox.js":"5","C:\\Users\\kungu\\Desktop\\react\\myfirstreact\\src\\Map.js":"6","C:\\Users\\kungu\\Desktop\\react\\myfirstreact\\src\\Table.js":"7","C:\\Users\\kungu\\Desktop\\react\\myfirstreact\\src\\util.js":"8","C:\\Users\\kungu\\Desktop\\react\\myfirstreact\\src\\LineGraph.js":"9"},{"size":504,"mtime":1618579325585,"results":"10","hashOfConfig":"11"},{"size":1209,"mtime":1609937231614,"results":"12","hashOfConfig":"11"},{"size":448,"mtime":1609936295942,"results":"13","hashOfConfig":"11"},{"size":3433,"mtime":1619903888971,"results":"14","hashOfConfig":"11"},{"size":488,"mtime":1618620016222,"results":"15","hashOfConfig":"11"},{"size":149,"mtime":1618621078844,"results":"16","hashOfConfig":"11"},{"size":306,"mtime":1619817877467,"results":"17","hashOfConfig":"11"},{"size":137,"mtime":1619819010032,"results":"18","hashOfConfig":"11"},{"size":1994,"mtime":1619904812259,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"9wsv83",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"41","messages":"42","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},"C:\\Users\\kungu\\Desktop\\react\\myfirstreact\\src\\index.js",[],["44","45"],"C:\\Users\\kungu\\Desktop\\react\\myfirstreact\\src\\components\\counter.jsx",["46"],"import React, { Component } from 'react';\r\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\r\nimport Navbar from './navbar';\r\nimport './App.css';\r\nclass Counter extends Component {\r\n    state={\r\n        count:1,\r\n        tags: ['tag1', 'tag2', 'tag3']\r\n    };\r\n\r\n    renderTags(){\r\n        if(this.state.tags.length === 0) return <p>There are no tags!</p>;\r\n    }\r\n\r\n    handleIncrement(){\r\n        console.log('increment clicked');\r\n    }\r\n\r\n    render() { \r\n        return (\r\n            <div>\r\n                <Router>\r\n                    <Navbar/>\r\n                </Router>\r\n            \r\n                <span className={this.getBadgeClasses()}>{this.formatCount()}</span>\r\n                <button onclick={this.handleIncrement} className=\"btn btn-secondary btn-sm\">Increment</button>\r\n                <ul>\r\n                    {this.state.tags.map(tag => <li key={tag}>{tag}</li>)}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getBadgeClasses() {\r\n        let classes = \"badge m-2 badge-\";\r\n        classes += (this.state.count === 0) ? \"warning\" : \"primary\";\r\n        return classes;\r\n    }\r\n\r\n    formatCount(){\r\n       \r\n    }\r\n}\r\n\r\n \r\nexport default Counter;",["47","48"],"C:\\Users\\kungu\\Desktop\\react\\myfirstreact\\src\\components\\navbar.jsx",["49"],"import React, {Component} from 'react';\r\nclass Navbar extends Component{\r\n    state={\r\n\r\n    };\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <nav class=\"navbar navbar-light bg-light\">\r\n                <div class=\"container-fluid\">\r\n                    <a class=\"navbar-brand\" href=\"#\">Navbar</a>\r\n                </div>\r\n                </nav>\r\n            </div>\r\n           \r\n        )\r\n    };\r\n}\r\n\r\nexport default Navbar","C:\\Users\\kungu\\Desktop\\react\\myfirstreact\\src\\App.js",["50"],"import React, { useState, useEffect } from 'react';\r\nimport { MenuItem, FormControl, Select, Card, CardContent } from \"@material-ui/core\";\r\nimport InfoBox from './InfoBox';\r\nimport Map from './Map';\r\nimport \"./App.css\";\r\nimport Table from \"./Table\";\r\nimport {sortData} from \"./util\";\r\nimport LineGraph from './LineGraph';\r\n\r\nfunction App() {\r\n    const [countries, setCountries]=useState([]);\r\n    const [country, setCountry]=useState('worldwide');\r\n    const [countryInfo, setCountryInfo] = useState({});\r\n    const [tableData, setTableData] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        fetch(\"https://disease.sh/v3/covid-19/all\")\r\n        .then((response)=>response.json())\r\n        .then((data)=>setCountryInfo(data))\r\n    },[]);\r\n\r\n    useEffect(()=>{\r\n        const getCountriesData = async () =>{\r\n            await fetch(\"https://disease.sh/v3/covid-19/countries\").then((response) => response.json())\r\n            .then((data)=>{\r\n                const countries = data.map((country)=>({\r\n                    name:country.country,\r\n                    value: country.countryInfo.iso2,\r\n                }));\r\n                const sortedData = sortData(data);\r\n                setTableData(sortedData);\r\n                setCountries(countries);\r\n            })\r\n        }\r\n        getCountriesData();\r\n    },[]);\r\n\r\n    const onCountryChange = async(event) => {\r\n        const countryCode = event.target.value\r\n;        setCountry(countryCode);\r\n\r\n        const url = countryCode === 'worldwide'\r\n        ? \"https://disease.sh/v3/covid-19/all\"\r\n        : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\r\n\r\n        await fetch(url)\r\n        .then((response)=>response.json())\r\n        .then((data)=>{\r\n            setCountry(countryCode);\r\n            setCountryInfo(data);\r\n        });\r\n\r\n    };\r\n\r\n    console.log(\"country info\", countryInfo);\r\n\r\n    return(\r\n        <div className=\"app\">\r\n            <Card className=\"app__left\">\r\n                <div className=\"app__header\">\r\n                    <h1>COVID-19 TRACKER</h1>\r\n                    <FormControl className=\"app__dropdown\">\r\n                        <Select variant=\"outlined\" onChange={onCountryChange} value={country}>\r\n\r\n                            <MenuItem value=\"worldwide\">Worldwide</MenuItem>\r\n                            {countries.map((country)=>(\r\n                                <MenuItem value={country.value}>\r\n                                    {country.name}\r\n                                </MenuItem>\r\n                            ))}\r\n\r\n                        </Select>\r\n                    </FormControl>\r\n                </div>\r\n\r\n                <div className=\"app__stats\">\r\n                    <InfoBox title=\"Coronavirus Cases\" cases={countryInfo.todayCases} total={countryInfo.cases} />\r\n                    <InfoBox title=\"Recovered\" cases={countryInfo.todayRecovered} total={countryInfo.recovered} />\r\n                    <InfoBox title=\"Deaths\" cases={countryInfo.todayDeaths} total={countryInfo.deaths} />\r\n                </div>\r\n                <Map />\r\n            </Card>\r\n\r\n            <Card className=\"app__right\">\r\n                <CardContent>\r\n                    <h3>Live Cases by Country</h3>\r\n                    <Table countries={tableData}></Table>\r\n                    <h3>Worldwide New Cases</h3>\r\n                </CardContent>\r\n            </Card>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\kungu\\Desktop\\react\\myfirstreact\\src\\InfoBox.js",[],"C:\\Users\\kungu\\Desktop\\react\\myfirstreact\\src\\Map.js",[],"C:\\Users\\kungu\\Desktop\\react\\myfirstreact\\src\\Table.js",[],"C:\\Users\\kungu\\Desktop\\react\\myfirstreact\\src\\util.js",[],"C:\\Users\\kungu\\Desktop\\react\\myfirstreact\\src\\LineGraph.js",["51"],"import React from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport numeral from 'numeral';\r\n\r\nconst options = {\r\n   legend:{\r\n     display: false,\r\n   },\r\n   elements:{\r\n     point:{\r\n       radius:0,\r\n     },\r\n   },\r\n   maintainAspectRatio:false,\r\n   tooltips:{\r\n     mode:\"index\",\r\n     intersept:false,\r\n     callbacks:{\r\n       label: function(tooltipItem, data){\r\n         return numeral(tooltipItem.value).format(\"+0,0\")\r\n       },\r\n     },\r\n   },\r\n   scales:{\r\n     xAxes:{\r\n       type:\"time\",\r\n       time:{\r\n         format:\"MM/DD/YY\",\r\n         tooltipFormat:\"ll\",\r\n       },\r\n     },\r\n   },\r\n   yAxes:{\r\n\r\n       gridLines:{\r\n         display:false,\r\n       },\r\n       ticks:{\r\n         callback:function(value, index, values){\r\n           return numeral(value).format(\"0a\");\r\n         },\r\n       },\r\n\r\n   },\r\n};\r\nconst buidChartData = (data, casesType='cases') => {\r\n  let chartData = [];\r\n  let lastDataPoint;\r\n  for(let date in data.cases) {\r\n    if (lastDataPoint) {\r\n      const newDataPoint = {\r\n        x:date,\r\n        y:data[casesType][date] - lastDataPoint\r\n      }\r\n      chartData.push(newDataPoint);\r\n    }\r\n    lastDataPoint = data[casesType][date];\r\n  };\r\n  return chartData;\r\n\r\n};\r\n\r\n\r\nfunction LineGraph() {\r\n  const [data, setData]=useState({});\r\n\r\n  useEffect(()=>{\r\n    const fetchData = async()=>{\r\n      await fetch('https://disease.sh/v3/covid-19/historical/all?lastdays=120')\r\n        .then((response)=> {\r\n          return response.json();\r\n        })\r\n        .then((data => {\r\n           let chartData = buildChartData(data, \"cases\");\r\n           setData(chartData);\r\n\r\n         });\r\n    };\r\n    fetchData();\r\n  },[]);\r\n\r\n\r\n  return (\r\n    <div>\r\n    {data?.length > 0 && (\r\n      <Line\r\n        options={options}\r\n        data={{\r\n          datasets:[{\r\n            backgroudColor:\"rgba(284, 16, 50, 0)\",\r\n            borderColor:\"#cc1034\",\r\n            data:data,\r\n          }]}}; />\r\n    )}\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LineGraph;\r\n",{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":2,"column":34,"nodeType":"58","messageId":"59","endLine":2,"endColumn":39},{"ruleId":"52","replacedBy":"60"},{"ruleId":"54","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":12,"column":21,"nodeType":"64","endLine":12,"endColumn":54},{"ruleId":"56","severity":1,"message":"65","line":8,"column":8,"nodeType":"58","messageId":"59","endLine":8,"endColumn":17},{"ruleId":null,"fatal":true,"severity":2,"message":"66","line":77,"column":12},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar",["67"],["68"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'LineGraph' is defined but never used.","Parsing error: Unexpected token, expected \",\"\n\n\u001b[0m \u001b[90m 75 | \u001b[39m           setData(chartData)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 76 | \u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 | \u001b[39m         })\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m           \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 78 | \u001b[39m    }\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 79 | \u001b[39m    fetchData()\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 80 | \u001b[39m  }\u001b[33m,\u001b[39m[])\u001b[33m;\u001b[39m\u001b[0m","no-global-assign","no-unsafe-negation"]